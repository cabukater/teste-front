{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth/auth.service\";\nimport * as i3 from \"@angular/router\";\nexport class LoginComponent {\n  constructor(fb, authService, router) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  onLogin() {\n    if (this.loginForm.valid) {\n      const {\n        username,\n        password\n      } = this.loginForm.value;\n      this.authService.login(username, password).subscribe({\n        next: res => {\n          this.router.navigate(['/devices']);\n        },\n        error: err => {\n          console.error('Erro na autenticação', err);\n        }\n      });\n    }\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 14,\n    vars: 2,\n    consts: [[1, \"login-container\", 3, \"formGroup\", \"ngSubmit\"], [1, \"text-center\", \"mb-4\"], [\"src\", \"caminho-para-logo.png\", \"alt\", \"Logo da Empresa\", 1, \"login-logo\"], [1, \"mb-3\"], [\"for\", \"username\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"username\", \"formControlName\", \"username\", \"placeholder\", \"Enter your username\", 1, \"form-control\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Enter your password\", 1, \"form-control\"], [1, \"d-grid\", \"gap-2\"], [\"type\", \"submit\", 1, \"btn\", \"btn-block\", \"btn-primary\", 3, \"disabled\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onLogin();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelement(2, \"img\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"label\", 4);\n        i0.ɵɵtext(5, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 3)(8, \"label\", 6);\n        i0.ɵɵtext(9, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 8)(12, \"button\", 9);\n        i0.ɵɵtext(13, \"Login\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"html[_ngcontent-%COMP%], body[_ngcontent-%COMP%] {\\n  height: 100vh;\\n  margin: 0;\\n  padding: 0;\\n  background: #f7f7f7;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\n}\\n\\n.login-container[_ngcontent-%COMP%] {\\n  width: 100%;\\n  max-width: 350px;\\n  padding: 2rem;\\n  margin: auto;\\n  background: #ffffff;\\n  border-radius: 8px;\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  vertical-align: middle;\\n}\\n\\n@media (max-width: 576px) {\\n  .login-container[_ngcontent-%COMP%] {\\n    width: 90%;\\n    padding: 1.5rem;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLQTtFQUNFLGFBQUE7RUFDQSxTQUFBO0VBQ0EsVUFBQTtFQUNBLG1CQVRhO0VBVWIsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSwyREFBQTtBQUpGOztBQU9BO0VBQ0UsV0FBQTtFQUNBLGdCQUFBO0VBQ0EsYUFBQTtFQUNBLFlBQUE7RUFDQSxtQkFBQTtFQUNBLGtCQUFBO0VBQ0Esd0NBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7RUFFQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0Esc0JBQUE7QUFMRjs7QUFRQTtFQUNFO0lBQ0UsVUFBQTtJQUNBLGVBQUE7RUFMRjtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiJGNvci1kZS1mdW5kbzogI2Y3ZjdmNztcbiRjb3ItcHJpbWFyaWE6ICM1ZTcyZTQ7XG4kY29yLXNvbWJyYTogcmdiYSgwLCAwLCAwLCAwLjEpO1xuXG4vLyBFc3RpbG9zIGdsb2JhaXNcbmh0bWwsIGJvZHkge1xuICBoZWlnaHQ6IDEwMHZoO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGJhY2tncm91bmQ6ICRjb3ItZGUtZnVuZG87XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmb250LWZhbWlseTogJ0hlbHZldGljYSBOZXVlJywgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcbn1cblxuLmxvZ2luLWNvbnRhaW5lciB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDM1MHB4O1xuICBwYWRkaW5nOiAycmVtO1xuICBtYXJnaW46IGF1dG87IC8vIEFqdWRhIG5vIGFsaW5oYW1lbnRvIHZlcnRpY2FsXG4gIGJhY2tncm91bmQ6ICNmZmZmZmY7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgYm94LXNoYWRvdzogMCA0cHggOHB4ICRjb3Itc29tYnJhO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAvLyBBbGluaGEgbyBjb250ZcODwrpkbyBkbyAubG9naW4tY29udGFpbmVyIGFvIGNlbnRyb1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cbi8vIFJlc3BvbnNpdmlkYWRlXG5AbWVkaWEgKG1heC13aWR0aDogNTc2cHgpIHtcbiAgLmxvZ2luLWNvbnRhaW5lciB7XG4gICAgd2lkdGg6IDkwJTtcbiAgICBwYWRkaW5nOiAxLjVyZW07XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AAUnE,OAAM,MAAOC,cAAc;EAGzBC,YACUC,EAAe,EACfC,WAAwB,EACxBC,MAAc;IAFd,OAAE,GAAFF,EAAE;IACF,gBAAW,GAAXC,WAAW;IACX,WAAM,GAANC,MAAM;EACZ;EAEJC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAC;MAC7BC,QAAQ,EAAE,CAAC,EAAE,EAAET,UAAU,CAACU,QAAQ,CAAC;MACnCC,QAAQ,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACU,QAAQ;KACnC,CAAC;EACJ;EAEAE,OAAO;IACL,IAAI,IAAI,CAACL,SAAS,CAACM,KAAK,EAAE;MACxB,MAAM;QAAEJ,QAAQ;QAAEE;MAAQ,CAAE,GAAG,IAAI,CAACJ,SAAS,CAACO,KAAK;MACnD,IAAI,CAACV,WAAW,CAACW,KAAK,CAACN,QAAQ,EAAEE,QAAQ,CAAC,CAACK,SAAS,CAAC;QACnDC,IAAI,EAAGC,GAAG,IAAI;UACZ,IAAI,CAACb,MAAM,CAACc,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;QACpC,CAAC;QACDC,KAAK,EAAGC,GAAG,IAAI;UACbC,OAAO,CAACF,KAAK,CAAC,sBAAsB,EAAEC,GAAG,CAAC;QAC5C;OACD,CAAC;;EAEN;EAAC;qBA5BUpB,cAAc;EAAA;EAAA;UAAdA,cAAc;IAAAsB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCX3BC,+BAA6E;QAA/CA;UAAA,OAAYC,aAAS;QAAA,EAAC;QAClDD,8BAA8B;QAC5BA,yBAA0E;QAC5EA,iBAAM;QAENA,8BAAkB;QACyBA,wBAAQ;QAAAA,iBAAQ;QACzDA,2BAAmH;QACrHA,iBAAM;QAENA,8BAAkB;QACyBA,wBAAQ;QAAAA,iBAAQ;QACzDA,4BAAuH;QACzHA,iBAAM;QAENA,+BAA0B;QAC+DA,sBAAK;QAAAA,iBAAS;;;QAhBnGA,yCAAuB;QAgB+BA,gBAA8B;QAA9BA,gDAA8B","names":["Validators","LoginComponent","constructor","fb","authService","router","ngOnInit","loginForm","group","username","required","password","onLogin","valid","value","login","subscribe","next","res","navigate","error","err","console","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/cabukater/Projects/teste-front/front/src/app/components/login/login.component.ts","/Users/cabukater/Projects/teste-front/front/src/app/components/login/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router'; \nimport { AuthService } from 'src/app/services/auth/auth.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm!: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  onLogin(): void {\n    if (this.loginForm.valid) {\n      const { username, password } = this.loginForm.value;\n      this.authService.login(username, password).subscribe({\n        next: (res) => {\n          this.router.navigate(['/devices']); \n        },\n        error: (err) => {\n          console.error('Erro na autenticação', err);\n        }\n      });\n    }\n  }\n}\n","<form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\" class=\"login-container\">\n  <div class=\"text-center mb-4\">\n    <img src=\"caminho-para-logo.png\" alt=\"Logo da Empresa\" class=\"login-logo\">\n  </div>\n\n  <div class=\"mb-3\">\n    <label for=\"username\" class=\"form-label\">Username</label>\n    <input type=\"text\" id=\"username\" formControlName=\"username\" class=\"form-control\" placeholder=\"Enter your username\">\n  </div>\n\n  <div class=\"mb-3\">\n    <label for=\"password\" class=\"form-label\">Password</label>\n    <input type=\"password\" id=\"password\" formControlName=\"password\" class=\"form-control\" placeholder=\"Enter your password\">\n  </div>\n\n  <div class=\"d-grid gap-2\">\n    <button type=\"submit\" class=\"btn btn-block btn-primary\" [disabled]=\"loginForm.invalid\">Login</button>\n  </div>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
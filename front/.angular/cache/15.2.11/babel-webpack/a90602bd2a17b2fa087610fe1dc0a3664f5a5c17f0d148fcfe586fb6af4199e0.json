{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../error/error-handler.service\";\nexport class DeviceService {\n  constructor(http, errorHandler) {\n    this.http = http;\n    this.errorHandler = errorHandler;\n    this.devicesSubject = new BehaviorSubject([]);\n    this.devices$ = this.devicesSubject.asObservable();\n    this.apiUrl = 'http://localhost:5000/api/device';\n  }\n  getDevices() {\n    return this.http.get(this.apiUrl);\n  }\n  updateDevice(device) {\n    return this.http.put(`${this.apiUrl}/${device.id}`, device).pipe(catchError(this.errorHandler.handleError));\n  }\n  deleteDevice(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  addDevice(device) {\n    return this.http.post(this.apiUrl, device);\n  }\n  static #_ = this.ɵfac = function DeviceService_Factory(t) {\n    return new (t || DeviceService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ErrorHandlerService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DeviceService,\n    factory: DeviceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAEA,SAASA,eAAe,QAAgC,MAAM;AAC9D,SAASC,UAAU,QAAkB,gBAAgB;;;;AAOrD,OAAM,MAAOC,aAAa;EAKxBC,YACUC,IAAgB,EAChBC,YAAiC;IADjC,SAAI,GAAJD,IAAI;IACJ,iBAAY,GAAZC,YAAY;IANd,mBAAc,GAAG,IAAIL,eAAe,CAAW,EAAE,CAAC;IAC1D,aAAQ,GAAG,IAAI,CAACM,cAAc,CAACC,YAAY,EAAE;IAErC,WAAM,GAAG,kCAAkC;EAI/C;EAEJC,UAAU;IACT,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAW,IAAI,CAACC,MAAM,CAAC;EAC5C;EAEAC,YAAY,CAACC,MAAc;IACzB,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAS,GAAG,IAAI,CAACH,MAAM,IAAIE,MAAM,CAACE,EAAE,EAAE,EAAEF,MAAM,CAAC,CAACG,IAAI,CACtEd,UAAU,CAAC,IAAI,CAACI,YAAY,CAACW,WAAW,CAAC,CAC1C;EACH;EAEAC,YAAY,CAACH,EAAU;IACrB,OAAO,IAAI,CAACV,IAAI,CAACc,MAAM,CAAC,GAAG,IAAI,CAACR,MAAM,IAAII,EAAE,EAAE,CAAC;EACjD;EACAK,SAAS,CAACP,MAAc;IACtB,OAAO,IAAI,CAACR,IAAI,CAACgB,IAAI,CAAS,IAAI,CAACV,MAAM,EAAEE,MAAM,CAAC;EACpD;EAAC;qBAzBUV,aAAa;EAAA;EAAA;WAAbA,aAAa;IAAAmB,SAAbnB,aAAa;IAAAoB,YAFZ;EAAM","names":["BehaviorSubject","catchError","DeviceService","constructor","http","errorHandler","devicesSubject","asObservable","getDevices","get","apiUrl","updateDevice","device","put","id","pipe","handleError","deleteDevice","delete","addDevice","post","factory","providedIn"],"sourceRoot":"","sources":["/Users/cabukater/Projects/teste-front/front/src/app/services/device/device.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { ErrorHandlerService } from '../error/error-handler.service';\nimport { Device } from 'src/app/models/device.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeviceService {\n  private devicesSubject = new BehaviorSubject<Device[]>([]);\n  devices$ = this.devicesSubject.asObservable();\n\n  private apiUrl = 'http://localhost:5000/api/device'; \n  constructor(\n    private http: HttpClient,\n    private errorHandler: ErrorHandlerService \n  ) { }\n\n  getDevices(): Observable<Device[]> {\n   return this.http.get<Device[]>(this.apiUrl)\n  }\n\n  updateDevice(device: Device): Observable<Device> {\n    return this.http.put<Device>(`${this.apiUrl}/${device.id}`, device).pipe(\n      catchError(this.errorHandler.handleError)\n    );\n  }\n  \n  deleteDevice(id: string): Observable<any> {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  addDevice(device: Device): Observable<Device> {\n    return this.http.post<Device>(this.apiUrl, device);\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/device/device.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction DeviceListComponent_tr_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const device_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(device_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(device_r1.status);\n  }\n}\nexport class DeviceListComponent {\n  constructor(deviceService) {\n    this.deviceService = deviceService;\n    this.devices = [];\n  }\n  ngOnInit() {\n    this.deviceService.getDevices().subscribe({\n      next: data => {\n        this.devices = data;\n      },\n      error: error => {\n        console.error('Erro ao obter dispositivos', error);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function DeviceListComponent_Factory(t) {\n    return new (t || DeviceListComponent)(i0.ɵɵdirectiveInject(i1.DeviceService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DeviceListComponent,\n    selectors: [[\"app-device-list\"]],\n    decls: 27,\n    vars: 2,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\"], [\"for\", \"status\"], [\"id\", \"status\", \"formControlName\", \"status\"], [\"value\", \"active\"], [\"value\", \"inactive\"], [\"type\", \"submit\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function DeviceListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"device-list works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\")(3, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function DeviceListComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.registerDevice();\n        });\n        i0.ɵɵelementStart(4, \"div\")(5, \"label\", 1);\n        i0.ɵɵtext(6, \"Nome do Dispositivo:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\")(9, \"label\", 3);\n        i0.ɵɵtext(10, \"Status:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"select\", 4)(12, \"option\", 5);\n        i0.ɵɵtext(13, \"Ativo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"option\", 6);\n        i0.ɵɵtext(15, \"Inativo\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(16, \"button\", 7);\n        i0.ɵɵtext(17, \"Registrar Dispositivo\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"table\")(19, \"thead\")(20, \"tr\")(21, \"th\");\n        i0.ɵɵtext(22, \"Nome\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"th\");\n        i0.ɵɵtext(24, \"Status\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(25, \"tbody\");\n        i0.ɵɵtemplate(26, DeviceListComponent_tr_26_Template, 5, 2, \"tr\", 8);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.deviceForm);\n        i0.ɵɵadvance(23);\n        i0.ɵɵproperty(\"ngForOf\", ctx.devices);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;;IA0BQA,0BAAmC;IAC7BA,YAAiB;IAAAA,iBAAK;IAC1BA,0BAAI;IAAAA,YAAmB;IAAAA,iBAAK;;;;IADxBA,eAAiB;IAAjBA,oCAAiB;IACjBA,eAAmB;IAAnBA,sCAAmB;;;AClBjC,OAAM,MAAOC,mBAAmB;EAG9BC,YAAoBC,aAA4B;IAA5B,kBAAa,GAAbA,aAAa;IAFjC,YAAO,GAAa,EAAE;EAE8B;EAEpDC,QAAQ;IACN,IAAI,CAACD,aAAa,CAACE,UAAU,EAAE,CAACC,SAAS,CAAC;MACxCC,IAAI,EAAGC,IAAI,IAAI;QACb,IAAI,CAACC,OAAO,GAAGD,IAAI;MACrB,CAAC;MACDE,KAAK,EAAGA,KAAK,IAAI;QACfC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;KACD,CAAC;EACJ;EAAC;qBAdUT,mBAAmB;EAAA;EAAA;UAAnBA,mBAAmB;IAAAW;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QDVhChB,yBAAG;QAAAA,kCAAkB;QAAAA,iBAAI;QAEzBA,2BAAK;QAC8BA;UAAA,OAAYiB,oBAAgB;QAAA,EAAC;QAC1DjB,2BAAK;QACeA,oCAAoB;QAAAA,iBAAQ;QAC9CA,2BAAoD;QACtDA,iBAAM;QACNA,2BAAK;QACiBA,wBAAO;QAAAA,iBAAQ;QACnCA,kCAA6C;QACpBA,sBAAK;QAAAA,iBAAS;QACrCA,kCAAyB;QAAAA,wBAAO;QAAAA,iBAAS;QAG7CA,kCAAsB;QAAAA,sCAAqB;QAAAA,iBAAS;QAGtDA,8BAAO;QAGGA,qBAAI;QAAAA,iBAAK;QACbA,2BAAI;QAAAA,uBAAM;QAAAA,iBAAK;QAGnBA,8BAAO;QACLA,oEAGK;QACPA,iBAAQ;;;QA3BJA,eAAwB;QAAxBA,0CAAwB;QAuBHA,gBAAU;QAAVA,qCAAU","names":["i0","DeviceListComponent","constructor","deviceService","ngOnInit","getDevices","subscribe","next","data","devices","error","console","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/cabukater/Projects/teste-front/front/src/app/components/device-list/device-list.component.html","/Users/cabukater/Projects/teste-front/front/src/app/components/device-list/device-list.component.ts"],"sourcesContent":["<p>device-list works!</p>\n<!-- device-list.component.html -->\n<div>\n    <form [formGroup]=\"deviceForm\" (ngSubmit)=\"registerDevice()\">\n      <div>\n        <label for=\"name\">Nome do Dispositivo:</label>\n        <input type=\"text\" id=\"name\" formControlName=\"name\">\n      </div>\n      <div>\n        <label for=\"status\">Status:</label>\n        <select id=\"status\" formControlName=\"status\">\n          <option value=\"active\">Ativo</option>\n          <option value=\"inactive\">Inativo</option>\n        </select>\n      </div>\n      <button type=\"submit\">Registrar Dispositivo</button>\n    </form>\n  \n    <table>\n      <thead>\n        <tr>\n          <th>Nome</th>\n          <th>Status</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let device of devices\">\n          <td>{{ device.name }}</td>\n          <td>{{ device.status }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Device } from 'src/app/models/device.model';\nimport { DeviceService } from 'src/app/services/device/device.service';\n\n@Component({\n  selector: 'app-device-list',\n  templateUrl: './device-list.component.html',\n  styleUrls: ['./device-list.component.scss']\n})\nexport class DeviceListComponent implements OnInit {\n  devices: Device[] = [];\n\n  constructor(private deviceService: DeviceService) { }\n\n  ngOnInit(): void {\n    this.deviceService.getDevices().subscribe({\n      next: (data) => {\n        this.devices = data;\n      },\n      error: (error) => {\n        console.error('Erro ao obter dispositivos', error);\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
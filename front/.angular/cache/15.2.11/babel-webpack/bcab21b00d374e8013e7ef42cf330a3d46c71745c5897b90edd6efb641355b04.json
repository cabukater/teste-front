{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/device/device.service\";\nexport class DeviceRegisterComponent {\n  constructor(fb, deviceService) {\n    this.fb = fb;\n    this.deviceService = deviceService;\n    this.devices = [];\n    this.deviceForm = this.fb.group({\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      manufacturer: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.loadDevices();\n  }\n  addDevice() {\n    if (this.deviceForm.valid) {\n      this.deviceService.addDevice(this.deviceForm.value).subscribe(() => {\n        this.deviceForm.reset();\n        this.loadDevices();\n      });\n    }\n  }\n  loadDevices() {\n    this.deviceService.getDevices().subscribe(devices => {\n      this.devices = devices;\n    });\n  }\n  static #_ = this.ɵfac = function DeviceRegisterComponent_Factory(t) {\n    return new (t || DeviceRegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.DeviceService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DeviceRegisterComponent,\n    selectors: [[\"app-device-register\"]],\n    decls: 22,\n    vars: 1,\n    consts: [[1, \"container\", \"mt-3\"], [1, \"row\"], [1, \"col-md-6\", \"offset-md-3\"], [1, \"mb-3\", \"text-center\"], [1, \"card\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"name\", 1, \"form-label\"], [\"id\", \"name\", \"type\", \"text\", \"formControlName\", \"name\", \"placeholder\", \"Digite o nome do dispositivo\", 1, \"form-control\"], [\"for\", \"description\", 1, \"form-label\"], [\"id\", \"description\", \"type\", \"text\", \"formControlName\", \"description\", \"placeholder\", \"Descreva o dispositivo\", 1, \"form-control\"], [\"for\", \"manufacturer\", 1, \"form-label\"], [\"id\", \"manufacturer\", \"type\", \"text\", \"formControlName\", \"manufacturer\", \"placeholder\", \"Nome do fabricante\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"w-100\"]],\n    template: function DeviceRegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\", 3);\n        i0.ɵɵtext(4, \"Registrar Dispositivo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 5)(7, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function DeviceRegisterComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.addDevice();\n        });\n        i0.ɵɵelementStart(8, \"div\", 7)(9, \"label\", 8);\n        i0.ɵɵtext(10, \"Nome:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 7)(13, \"label\", 10);\n        i0.ɵɵtext(14, \"Descri\\u00E7\\u00E3o:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 7)(17, \"label\", 12);\n        i0.ɵɵtext(18, \"Fabricante:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 14);\n        i0.ɵɵtext(21, \"Registrar Dispositivo\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.deviceForm);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;AAUnE,OAAM,MAAOC,uBAAuB;EAIlCC,YAAoBC,EAAe,EAAUC,aAA4B;IAArD,OAAE,GAAFD,EAAE;IAAuB,kBAAa,GAAbC,aAAa;IAF1D,YAAO,GAAa,EAAE;IAGpB,IAAI,CAACC,UAAU,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC9BC,IAAI,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACQ,QAAQ,CAAC;MAC/BC,WAAW,EAAE,CAAC,EAAE,EAAET,UAAU,CAACQ,QAAQ,CAAC;MACtCE,YAAY,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACQ,QAAQ;KACvC,CAAC;EACJ;EAEAG,QAAQ;IACN,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAC,SAAS;IACP,IAAI,IAAI,CAACR,UAAU,CAACS,KAAK,EAAE;MACzB,IAAI,CAACV,aAAa,CAACS,SAAS,CAAC,IAAI,CAACR,UAAU,CAACU,KAAK,CAAC,CAACC,SAAS,CAAC,MAAK;QACjE,IAAI,CAACX,UAAU,CAACY,KAAK,EAAE;QACvB,IAAI,CAACL,WAAW,EAAE;MACpB,CAAC,CAAC;;EAEN;EAEAA,WAAW;IACT,IAAI,CAACR,aAAa,CAACc,UAAU,EAAE,CAACF,SAAS,CAACG,OAAO,IAAG;MAClD,IAAI,CAACA,OAAO,GAAGA,OAAO;IACxB,CAAC,CAAC;EACJ;EAAC;qBA7BUlB,uBAAuB;EAAA;EAAA;UAAvBA,uBAAuB;IAAAmB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCXpCC,8BAA4B;QAGOA,qCAAqB;QAAAA,iBAAK;QACvDA,8BAAkB;QAEiBA;UAAA,OAAYC,eAAW;QAAA,EAAC;QACrDD,8BAAkB;QACqBA,sBAAK;QAAAA,iBAAQ;QAClDA,4BAAoH;QACtHA,iBAAM;QACNA,+BAAkB;QAC4BA,qCAAU;QAAAA,iBAAQ;QAC9DA,6BAA4H;QAC9HA,iBAAM;QACNA,+BAAkB;QAC6BA,4BAAW;QAAAA,iBAAQ;QAChEA,6BAA0H;QAC5HA,iBAAM;QACNA,mCAAoD;QAAAA,sCAAqB;QAAAA,iBAAS;;;QAb9EA,eAAwB;QAAxBA,0CAAwB","names":["Validators","DeviceRegisterComponent","constructor","fb","deviceService","deviceForm","group","name","required","description","manufacturer","ngOnInit","loadDevices","addDevice","valid","value","subscribe","reset","getDevices","devices","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/cabukater/Projects/teste-front/front/src/app/components/devices/device-register/device-register.component.ts","/Users/cabukater/Projects/teste-front/front/src/app/components/devices/device-register/device-register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Device } from 'src/app/models/device.model';\nimport { DeviceService } from 'src/app/services/device/device.service';\n\n\n@Component({\n  selector: 'app-device-register',\n  templateUrl: './device-register.component.html',\n  styleUrls: ['./device-register.component.scss']\n})\nexport class DeviceRegisterComponent {\n  deviceForm: FormGroup;\n  devices: Device[] = [];\n\n  constructor(private fb: FormBuilder, private deviceService: DeviceService) {\n    this.deviceForm = this.fb.group({\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      manufacturer: ['', Validators.required]\n    });\n  }\n\n  ngOnInit(): void {\n    this.loadDevices();\n  }\n\n  addDevice(): void {\n    if (this.deviceForm.valid) {\n      this.deviceService.addDevice(this.deviceForm.value).subscribe(() => {\n        this.deviceForm.reset();\n        this.loadDevices();\n      });\n    }\n  }\n\n  loadDevices(): void {\n    this.deviceService.getDevices().subscribe(devices => {\n      this.devices = devices;\n    });\n  }\n}","<div class=\"container mt-3\">\n  <div class=\"row\">\n    <div class=\"col-md-6 offset-md-3\">\n      <h2 class=\"mb-3 text-center\">Registrar Dispositivo</h2>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <form [formGroup]=\"deviceForm\" (ngSubmit)=\"addDevice()\">\n            <div class=\"mb-3\">\n              <label for=\"name\" class=\"form-label\">Nome:</label>\n              <input id=\"name\" type=\"text\" formControlName=\"name\" class=\"form-control\" placeholder=\"Digite o nome do dispositivo\">\n            </div>\n            <div class=\"mb-3\">\n              <label for=\"description\" class=\"form-label\">Descrição:</label>\n              <input id=\"description\" type=\"text\" formControlName=\"description\" class=\"form-control\" placeholder=\"Descreva o dispositivo\">\n            </div>\n            <div class=\"mb-3\">\n              <label for=\"manufacturer\" class=\"form-label\">Fabricante:</label>\n              <input id=\"manufacturer\" type=\"text\" formControlName=\"manufacturer\" class=\"form-control\" placeholder=\"Nome do fabricante\">\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary w-100\">Registrar Dispositivo</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
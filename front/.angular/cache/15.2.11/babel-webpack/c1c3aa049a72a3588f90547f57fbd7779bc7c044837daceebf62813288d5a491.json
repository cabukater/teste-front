{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/device/device.service\";\nimport * as i2 from \"@angular/common\";\nfunction DeviceListComponent_div_0_tr_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const device_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(device_r4.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(device_r4.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(device_r4.manufacturer);\n  }\n}\nfunction DeviceListComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"table\")(2, \"thead\")(3, \"tr\")(4, \"th\");\n    i0.ɵɵtext(5, \"Identifier\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\");\n    i0.ɵɵtext(7, \"Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\");\n    i0.ɵɵtext(9, \"Manufacturer\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"tbody\");\n    i0.ɵɵtemplate(11, DeviceListComponent_div_0_tr_11_Template, 7, 3, \"tr\", 2);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.devices);\n  }\n}\nfunction DeviceListComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Nenhum dispositivo encontrado.\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class DeviceListComponent {\n  constructor(deviceService) {\n    this.deviceService = deviceService;\n    this.devices = [];\n  }\n  ngOnInit() {\n    // Subscrição para o Observable retornado pelo service\n    this.deviceService.getDevices().subscribe({\n      next: devices => {\n        this.devices = devices;\n      },\n      error: error => {\n        console.error('Erro ao obter dispositivos', error);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function DeviceListComponent_Factory(t) {\n    return new (t || DeviceListComponent)(i0.ɵɵdirectiveInject(i1.DeviceService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DeviceListComponent,\n    selectors: [[\"app-device-list\"]],\n    decls: 3,\n    vars: 2,\n    consts: [[4, \"ngIf\", \"ngIfElse\"], [\"noDevices\", \"\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function DeviceListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, DeviceListComponent_div_0_Template, 12, 1, \"div\", 0);\n        i0.ɵɵtemplate(1, DeviceListComponent_ng_template_1_Template, 2, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.devices.length > 0)(\"ngIfElse\", _r1);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;IAWQA,0BAAmC;IAC7BA,YAAiB;IAAAA,iBAAK;IAC1BA,0BAAI;IAAAA,YAAwB;IAAAA,iBAAK;IACjCA,0BAAI;IAAAA,YAAyB;IAAAA,iBAAK;;;;IAF9BA,eAAiB;IAAjBA,oCAAiB;IACjBA,eAAwB;IAAxBA,2CAAwB;IACxBA,eAAyB;IAAzBA,4CAAyB;;;;;IAdvCA,2BAAgD;IAIlCA,0BAAU;IAAAA,iBAAK;IACnBA,0BAAI;IAAAA,2BAAW;IAAAA,iBAAK;IACpBA,0BAAI;IAAAA,4BAAY;IAAAA,iBAAK;IAIzBA,8BAAO;IACLA,0EAKK;IACPA,iBAAQ;;;;IANiBA,gBAAU;IAAVA,wCAAU;;;;;IAUrCA,yBAAG;IAAAA,8CAA8B;IAAAA,iBAAI;;;ACPzC,OAAM,MAAOC,mBAAmB;EAG9BC,YAAoBC,aAA4B;IAA5B,kBAAa,GAAbA,aAAa;IAFjC,YAAO,GAAa,EAAE;EAE8B;EAEpDC,QAAQ;IACN;IACA,IAAI,CAACD,aAAa,CAACE,UAAU,EAAE,CAACC,SAAS,CAAC;MACxCC,IAAI,EAAGC,OAAO,IAAI;QAChB,IAAI,CAACA,OAAO,GAAGA,OAAO;MACxB,CAAC;MACDC,KAAK,EAAGA,KAAK,IAAI;QACfC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;KACD,CAAC;EACJ;EAAC;qBAfUR,mBAAmB;EAAA;EAAA;UAAnBA,mBAAmB;IAAAU;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QDdhCf,qEAmBQ;QACNA,qHAEc;;;;QAtBVA,6CAA0B","names":["i0","DeviceListComponent","constructor","deviceService","ngOnInit","getDevices","subscribe","next","devices","error","console","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/cabukater/Projects/teste-front/front/src/app/components/devices/device-list/device-list.component.html","/Users/cabukater/Projects/teste-front/front/src/app/components/devices/device-list/device-list.component.ts"],"sourcesContent":["<div *ngIf=\"devices.length > 0; else noDevices\">\n    <table>\n      <thead>\n        <tr>\n          <th>Identifier</th>\n          <th>Description</th>\n          <th>Manufacturer</th>\n          <!-- Outras colunas conforme necessário -->\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let device of devices\">\n          <td>{{ device.name }}</td>\n          <td>{{ device.description }}</td>\n          <td>{{ device.manufacturer }}</td>\n          <!-- Outras células conforme necessário -->\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  <ng-template #noDevices>\n    <p>Nenhum dispositivo encontrado.</p>\n  </ng-template>\n  ","import { Component, OnInit } from '@angular/core';\nimport { Device } from 'src/app/models/device.model';\nimport { DeviceService } from 'src/app/services/device/device.service';\n\n// Representa a estrutura esperada da resposta da API\ninterface ApiResponse {\n  devices: Device[];\n}\n\n@Component({\n  selector: 'app-device-list',\n  templateUrl: './device-list.component.html',\n  styleUrls: ['./device-list.component.scss']\n})\nexport class DeviceListComponent implements OnInit {\n  devices: Device[] = [];\n\n  constructor(private deviceService: DeviceService) { }\n\n  ngOnInit(): void {\n    // Subscrição para o Observable retornado pelo service\n    this.deviceService.getDevices().subscribe({\n      next: (devices) => {\n        this.devices = devices;\n      },\n      error: (error) => {\n        console.error('Erro ao obter dispositivos', error);\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
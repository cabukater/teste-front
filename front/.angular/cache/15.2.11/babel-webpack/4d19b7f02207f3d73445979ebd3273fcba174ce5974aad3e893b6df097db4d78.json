{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/device/device.service\";\nexport class DeviceRegisterComponent {\n  constructor(fb, deviceService) {\n    this.fb = fb;\n    this.deviceService = deviceService;\n    this.devices = [];\n    this.deviceForm = this.fb.group({\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      manufacturer: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.loadDevices();\n  }\n  addDevice() {\n    if (this.deviceForm.valid) {\n      this.deviceService.addDevice(this.deviceForm.value).subscribe(() => {\n        this.deviceForm.reset();\n        this.loadDevices();\n      });\n    }\n  }\n  loadDevices() {\n    this.deviceService.getDevices().subscribe(devices => {\n      this.devices = devices;\n    });\n  }\n  static #_ = this.ɵfac = function DeviceRegisterComponent_Factory(t) {\n    return new (t || DeviceRegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.DeviceService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DeviceRegisterComponent,\n    selectors: [[\"app-device-register\"]],\n    decls: 23,\n    vars: 1,\n    consts: [[1, \"container\", \"mt-5\"], [\"novalidate\", \"\", 1, \"row\", \"g-3\", \"needs-validation\", 3, \"formGroup\", \"ngSubmit\"], [1, \"col-md-2\"], [\"for\", \"name\", 1, \"form-label\"], [\"id\", \"name\", \"formControlName\", \"name\", \"type\", \"text\", \"required\", \"\", 1, \"form-control\"], [1, \"invalid-feedback\"], [1, \"col-md-3\"], [\"for\", \"manufacturer\", 1, \"form-label\"], [\"id\", \"manufacturer\", \"formControlName\", \"manufacturer\", \"type\", \"text\", \"required\", \"\", 1, \"form-control\"], [1, \"col-md-4\"], [\"for\", \"description\", 1, \"form-label\"], [\"id\", \"description\", \"formControlName\", \"description\", \"type\", \"text\", \"required\", \"\", 1, \"form-control\"], [1, \"col-3\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function DeviceRegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function DeviceRegisterComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.addDevice();\n        });\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"label\", 3);\n        i0.ɵɵtext(4, \"Nome:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 4);\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵtext(7, \" Por favor, insira o nome do dispositivo. \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 6)(9, \"label\", 7);\n        i0.ɵɵtext(10, \"Fabricante:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 8);\n        i0.ɵɵelementStart(12, \"div\", 5);\n        i0.ɵɵtext(13, \" Por favor, insira o fabricante do dispositivo. \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 9)(15, \"label\", 10);\n        i0.ɵɵtext(16, \"Descri\\u00E7\\u00E3o:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 11);\n        i0.ɵɵelementStart(18, \"div\", 5);\n        i0.ɵɵtext(19, \" Por favor, insira uma descri\\u00E7\\u00E3o. \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"div\", 12)(21, \"button\", 13);\n        i0.ɵɵtext(22, \"Registrar Dispositivo\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.deviceForm);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;AAUnE,OAAM,MAAOC,uBAAuB;EAIlCC,YAAoBC,EAAe,EAAUC,aAA4B;IAArD,OAAE,GAAFD,EAAE;IAAuB,kBAAa,GAAbC,aAAa;IAF1D,YAAO,GAAa,EAAE;IAGpB,IAAI,CAACC,UAAU,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC9BC,IAAI,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACQ,QAAQ,CAAC;MAC/BC,WAAW,EAAE,CAAC,EAAE,EAAET,UAAU,CAACQ,QAAQ,CAAC;MACtCE,YAAY,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACQ,QAAQ;KACvC,CAAC;EACJ;EAEAG,QAAQ;IACN,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAC,SAAS;IACP,IAAI,IAAI,CAACR,UAAU,CAACS,KAAK,EAAE;MACzB,IAAI,CAACV,aAAa,CAACS,SAAS,CAAC,IAAI,CAACR,UAAU,CAACU,KAAK,CAAC,CAACC,SAAS,CAAC,MAAK;QACjE,IAAI,CAACX,UAAU,CAACY,KAAK,EAAE;QACvB,IAAI,CAACL,WAAW,EAAE;MACpB,CAAC,CAAC;;EAEN;EAEAA,WAAW;IACT,IAAI,CAACR,aAAa,CAACc,UAAU,EAAE,CAACF,SAAS,CAACG,OAAO,IAAG;MAClD,IAAI,CAACA,OAAO,GAAGA,OAAO;IACxB,CAAC,CAAC;EACJ;EAAC;qBA7BUlB,uBAAuB;EAAA;EAAA;UAAvBA,uBAAuB;IAAAmB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCXpCC,8BAA4B;QACKA;UAAA,OAAYC,eAAW;QAAA,EAAC;QACrDD,8BAAsB;QACiBA,qBAAK;QAAAA,iBAAQ;QAClDA,2BAAkF;QAClFA,8BAA8B;QAC5BA,0DACF;QAAAA,iBAAM;QAERA,8BAAsB;QACyBA,4BAAW;QAAAA,iBAAQ;QAChEA,4BAAkG;QAClGA,+BAA8B;QAC5BA,iEACF;QAAAA,iBAAM;QAIXA,+BAAsB;QACuBA,qCAAU;QAAAA,iBAAQ;QAC9DA,6BAAgG;QAChGA,+BAA8B;QAC5BA,6DACF;QAAAA,iBAAM;QAEJA,gCAAmB;QAC6BA,sCAAqB;QAAAA,iBAAS;;;QAzB1EA,eAAwB;QAAxBA,0CAAwB","names":["Validators","DeviceRegisterComponent","constructor","fb","deviceService","deviceForm","group","name","required","description","manufacturer","ngOnInit","loadDevices","addDevice","valid","value","subscribe","reset","getDevices","devices","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/cabukater/Projects/teste-front/front/src/app/components/devices/device-register/device-register.component.ts","/Users/cabukater/Projects/teste-front/front/src/app/components/devices/device-register/device-register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Device } from 'src/app/models/device.model';\nimport { DeviceService } from 'src/app/services/device/device.service';\n\n\n@Component({\n  selector: 'app-device-register',\n  templateUrl: './device-register.component.html',\n  styleUrls: ['./device-register.component.scss']\n})\nexport class DeviceRegisterComponent {\n  deviceForm: FormGroup;\n  devices: Device[] = [];\n\n  constructor(private fb: FormBuilder, private deviceService: DeviceService) {\n    this.deviceForm = this.fb.group({\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      manufacturer: ['', Validators.required]\n    });\n  }\n\n  ngOnInit(): void {\n    this.loadDevices();\n  }\n\n  addDevice(): void {\n    if (this.deviceForm.valid) {\n      this.deviceService.addDevice(this.deviceForm.value).subscribe(() => {\n        this.deviceForm.reset();\n        this.loadDevices();\n      });\n    }\n  }\n\n  loadDevices(): void {\n    this.deviceService.getDevices().subscribe(devices => {\n      this.devices = devices;\n    });\n  }\n}","<div class=\"container mt-5\">\n  <form [formGroup]=\"deviceForm\" (ngSubmit)=\"addDevice()\" class=\"row g-3 needs-validation\" novalidate>\n    <div class=\"col-md-2\">\n      <label for=\"name\" class=\"form-label\">Nome:</label>\n      <input id=\"name\" formControlName=\"name\" type=\"text\" class=\"form-control\" required>\n      <div class=\"invalid-feedback\">\n        Por favor, insira o nome do dispositivo.\n      </div>\n    </div>\n    <div class=\"col-md-3\">\n      <label for=\"manufacturer\" class=\"form-label\">Fabricante:</label>\n      <input id=\"manufacturer\" formControlName=\"manufacturer\" type=\"text\" class=\"form-control\" required>\n      <div class=\"invalid-feedback\">\n        Por favor, insira o fabricante do dispositivo.\n      </div>\n\n </div>\n\n <div class=\"col-md-4\">\n  <label for=\"description\" class=\"form-label\">Descrição:</label>\n  <input id=\"description\" formControlName=\"description\" type=\"text\" class=\"form-control\" required>\n  <div class=\"invalid-feedback\">\n    Por favor, insira uma descrição.\n  </div>\n</div>\n    <div class=\"col-3\">\n      <button type=\"submit\" class=\"btn btn-primary\">Registrar Dispositivo</button>\n    </div>\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet DeviceListComponent = class DeviceListComponent {\n  constructor(deviceService, fb) {\n    this.deviceService = deviceService;\n    this.fb = fb;\n    this.devices = [];\n  }\n  ngOnInit() {\n    this.deviceForm = this.fb.group({\n      name: ['', Validators.required],\n      status: ['active', Validators.required] // ou qualquer outro valor padrão que faça sentido\n    });\n\n    this.loadDevices();\n  }\n  loadDevices() {\n    this.deviceService.getDevices().subscribe({\n      next: data => {\n        this.devices = data;\n      },\n      error: error => {\n        console.error('Houve um erro ao carregar os dispositivos', error);\n      }\n    });\n  }\n  registerDevice() {\n    if (this.deviceForm.valid) {\n      // Aqui você pode adicionar a lógica para enviar o formulário\n      // para o seu serviço e registrar o dispositivo\n      console.log(this.deviceForm.value);\n    }\n  }\n};\nDeviceListComponent = __decorate([Component({\n  selector: 'app-device-list',\n  templateUrl: './device-list.component.html',\n  styleUrls: ['./device-list.component.scss']\n})], DeviceListComponent);\nexport { DeviceListComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAiCC,UAAU,QAAQ,gBAAgB;AAQ5D,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAI9BC,YACUC,aAA4B,EAC5BC,EAAe;IADf,kBAAa,GAAbD,aAAa;IACb,OAAE,GAAFC,EAAE;IALZ,YAAO,GAAU,EAAE;EAMf;EAEJC,QAAQ;IACN,IAAI,CAACC,UAAU,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC9BC,IAAI,EAAE,CAAC,EAAE,EAAER,UAAU,CAACS,QAAQ,CAAC;MAC/BC,MAAM,EAAE,CAAC,QAAQ,EAAEV,UAAU,CAACS,QAAQ,CAAC,CAAC;KACzC,CAAC;;IAEF,IAAI,CAACE,WAAW,EAAE;EACpB;EAEAA,WAAW;IACT,IAAI,CAACR,aAAa,CAACS,UAAU,EAAE,CAACC,SAAS,CAAC;MACxCC,IAAI,EAAGC,IAAS,IAAI;QAClB,IAAI,CAACC,OAAO,GAAGD,IAAI;MACrB,CAAC;MACDE,KAAK,EAAGA,KAAK,IAAI;QACfC,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;MACnE;KACD,CAAC;EACJ;EAEAE,cAAc;IACZ,IAAI,IAAI,CAACb,UAAU,CAACc,KAAK,EAAE;MACzB;MACA;MACAF,OAAO,CAACG,GAAG,CAAC,IAAI,CAACf,UAAU,CAACgB,KAAK,CAAC;;EAEtC;CACD;AApCYrB,mBAAmB,eAL/BF,SAAS,CAAC;EACTwB,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,GACWxB,mBAAmB,CAoC/B;SApCYA,mBAAmB","names":["Component","Validators","DeviceListComponent","constructor","deviceService","fb","ngOnInit","deviceForm","group","name","required","status","loadDevices","getDevices","subscribe","next","data","devices","error","console","registerDevice","valid","log","value","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/cabukater/Projects/teste-front/front/src/app/components/device-list/device-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { DeviceService } from 'src/app/services/device/device.service';\n\n@Component({\n  selector: 'app-device-list',\n  templateUrl: './device-list.component.html',\n  styleUrls: ['./device-list.component.scss']\n})\nexport class DeviceListComponent implements OnInit {\n  devices: any[] = [];\n  deviceForm!: FormGroup;\n\n  constructor(\n    private deviceService: DeviceService,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.deviceForm = this.fb.group({\n      name: ['', Validators.required],\n      status: ['active', Validators.required] // ou qualquer outro valor padrão que faça sentido\n    });\n\n    this.loadDevices();\n  }\n\n  loadDevices(): void {\n    this.deviceService.getDevices().subscribe({\n      next: (data: any) => {\n        this.devices = data;\n      },\n      error: (error) => {\n        console.error('Houve um erro ao carregar os dispositivos', error);\n      }\n    });\n  }\n\n  registerDevice(): void {\n    if (this.deviceForm.valid) {\n      // Aqui você pode adicionar a lógica para enviar o formulário\n      // para o seu serviço e registrar o dispositivo\n      console.log(this.deviceForm.value);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
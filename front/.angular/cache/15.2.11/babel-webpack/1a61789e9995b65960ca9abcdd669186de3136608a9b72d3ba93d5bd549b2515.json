{"ast":null,"code":"import { catchError, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../error/error-handler.service\";\nexport class AuthService {\n  constructor(http, errorHandler) {\n    this.http = http;\n    this.errorHandler = errorHandler;\n  }\n  login(username, password) {\n    const url = 'http://localhost:5000/api/login'; // Substitua pela URL correta da sua API de autenticação\n    return this.http.post(url, {\n      username,\n      password\n    }).pipe(tap(res => {\n      localStorage.setItem('token', res.token);\n    }), catchError(error => this.errorHandler.handleError(error)));\n  }\n  isLoggedIn() {\n    return !!localStorage.getItem('token');\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ErrorHandlerService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAGA,SAASA,UAAU,EAAEC,GAAG,QAAQ,gBAAgB;;;;AAMhD,OAAM,MAAOC,WAAW;EACtBC,YAAoBC,IAAgB,EAAUC,YAAiC;IAA3D,SAAI,GAAJD,IAAI;IAAsB,iBAAY,GAAZC,YAAY;EAAyB;EAEnFC,KAAK,CAACC,QAAgB,EAAEC,QAAgB;IACtC,MAAMC,GAAG,GAAG,iCAAiC,CAAC,CAAC;IAC/C,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAMD,GAAG,EAAE;MAAEF,QAAQ;MAAEC;IAAQ,CAAE,CAAC,CACpDG,IAAI,CACHV,GAAG,CAAEW,GAAuB,IAAI;MAC9BC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,GAAG,CAACG,KAAK,CAAC;IAC1C,CAAC,CAAC,EACFf,UAAU,CAAEgB,KAAK,IAAK,IAAI,CAACX,YAAY,CAACY,WAAW,CAACD,KAAK,CAAC,CAAC,CAC1D;EACP;EACAE,UAAU;IACR,OAAO,CAAC,CAACL,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC;EACxC;EAAC;qBAfUjB,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAkB,SAAXlB,WAAW;IAAAmB,YAFV;EAAM","names":["catchError","tap","AuthService","constructor","http","errorHandler","login","username","password","url","post","pipe","res","localStorage","setItem","token","error","handleError","isLoggedIn","getItem","factory","providedIn"],"sourceRoot":"","sources":["/Users/cabukater/Projects/teste-front/front/src/app/services/auth/auth.service.ts"],"sourcesContent":["import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { ErrorHandlerService } from '../error/error-handler.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  constructor(private http: HttpClient, private errorHandler: ErrorHandlerService) { }\n\n  login(username: string, password: string) {\n    const url = 'http://localhost:5000/api/login'; // Substitua pela URL correta da sua API de autenticação\n    return this.http.post<any>(url, { username, password })\n      .pipe(\n        tap((res: { token: string; }) => {\n          localStorage.setItem('token', res.token);\n        }),\n        catchError((error) => this.errorHandler.handleError(error))\n        );\n  }\n  isLoggedIn(): boolean {\n    return !!localStorage.getItem('token');\n  }\n  \n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport Swal from 'sweetalert2';\nlet DeviceListComponent = class DeviceListComponent {\n  constructor(deviceService) {\n    this.deviceService = deviceService;\n    this.devices = [];\n  }\n  ngOnInit() {\n    this.getDevices();\n  }\n  getDevices() {\n    this.deviceService.getDevices().subscribe({\n      next: devices => {\n        this.devices = devices;\n      },\n      error: error => {\n        console.error('Erro ao obter dispositivos', error);\n      }\n    });\n  }\n  editDevice(device) {\n    // Aqui, você preencheria o formulário de registro com os dados do dispositivo para edição\n    // Isso pode envolver a navegação para o componente de registro com os dados do dispositivo\n    console.log('Editando dispositivo', device);\n    // Lógica para preencher o formulário de edição\n  }\n\n  deleteDevice(device) {\n    Swal.fire({\n      title: 'Tem certeza?',\n      text: \"Você não poderá reverter isso!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Sim, delete!'\n    }).then(result => {\n      if (result.isConfirmed) {\n        this.deviceService.deleteDevice(device.id).subscribe({\n          next: () => {\n            this.getDevices();\n            Swal.fire('Deletado!', 'O dispositivo foi deletado.', 'success');\n          },\n          error: error => {\n            Swal.fire('Erro!', 'Não foi possível deletar o dispositivo.', 'error');\n          }\n        });\n      }\n    });\n  }\n};\nDeviceListComponent = __decorate([Component({\n  selector: 'app-device-list',\n  templateUrl: './device-list.component.html',\n  styleUrls: ['./device-list.component.scss']\n})], DeviceListComponent);\nexport { DeviceListComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAGjD,OAAOC,IAAI,MAAM,aAAa;AAOvB,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAG9BC,YAAoBC,aAA4B;IAA5B,kBAAa,GAAbA,aAAa;IAFjC,YAAO,GAAa,EAAE;EAE8B;EAEpDC,QAAQ;IACN,IAAI,CAACC,UAAU,EAAE;EACnB;EAEAA,UAAU;IACR,IAAI,CAACF,aAAa,CAACE,UAAU,EAAE,CAACC,SAAS,CAAC;MACxCC,IAAI,EAAGC,OAAO,IAAI;QAChB,IAAI,CAACA,OAAO,GAAGA,OAAO;MACxB,CAAC;MACDC,KAAK,EAAGA,KAAK,IAAI;QACfC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;KACD,CAAC;EACJ;EAEAE,UAAU,CAACC,MAAc;IACvB;IACA;IACAF,OAAO,CAACG,GAAG,CAAC,sBAAsB,EAAED,MAAM,CAAC;IAC3C;EACF;;EAEAE,YAAY,CAACF,MAAc;IACzBZ,IAAI,CAACe,IAAI,CAAC;MACRC,KAAK,EAAE,cAAc;MACrBC,IAAI,EAAE,gCAAgC;MACtCC,IAAI,EAAE,SAAS;MACfC,gBAAgB,EAAE,IAAI;MACtBC,kBAAkB,EAAE,SAAS;MAC7BC,iBAAiB,EAAE,MAAM;MACzBC,iBAAiB,EAAE;KACpB,CAAC,CAACC,IAAI,CAAEC,MAAM,IAAI;MACjB,IAAIA,MAAM,CAACC,WAAW,EAAE;QACtB,IAAI,CAACtB,aAAa,CAACW,YAAY,CAACF,MAAM,CAACc,EAAE,CAAC,CAACpB,SAAS,CAAC;UACnDC,IAAI,EAAE,MAAK;YACT,IAAI,CAACF,UAAU,EAAE;YACjBL,IAAI,CAACe,IAAI,CAAC,WAAW,EAAE,6BAA6B,EAAE,SAAS,CAAC;UAClE,CAAC;UACDN,KAAK,EAAGA,KAAK,IAAI;YACfT,IAAI,CAACe,IAAI,CAAC,OAAO,EAAE,yCAAyC,EAAE,OAAO,CAAC;UACxE;SACD,CAAC;;IAEN,CAAC,CAAC;EACJ;CACD;AAlDYd,mBAAmB,eAL/BF,SAAS,CAAC;EACT4B,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,GACW5B,mBAAmB,CAkD/B;SAlDYA,mBAAmB","names":["Component","Swal","DeviceListComponent","constructor","deviceService","ngOnInit","getDevices","subscribe","next","devices","error","console","editDevice","device","log","deleteDevice","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","id","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/cabukater/Projects/teste-front/front/src/app/components/devices/device-list/device-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Device } from 'src/app/models/device.model';\nimport { DeviceService } from 'src/app/services/device/device.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-device-list',\n  templateUrl: './device-list.component.html',\n  styleUrls: ['./device-list.component.scss']\n})\nexport class DeviceListComponent implements OnInit {\n  devices: Device[] = [];\n\n  constructor(private deviceService: DeviceService) { }\n\n  ngOnInit(): void {\n    this.getDevices();\n  }\n\n  getDevices(): void {\n    this.deviceService.getDevices().subscribe({\n      next: (devices) => {\n        this.devices = devices;\n      },\n      error: (error) => {\n        console.error('Erro ao obter dispositivos', error);\n      }\n    });\n  }\n\n  editDevice(device: Device): void {\n    // Aqui, você preencheria o formulário de registro com os dados do dispositivo para edição\n    // Isso pode envolver a navegação para o componente de registro com os dados do dispositivo\n    console.log('Editando dispositivo', device);\n    // Lógica para preencher o formulário de edição\n  }\n\n  deleteDevice(device: Device): void {\n    Swal.fire({\n      title: 'Tem certeza?',\n      text: \"Você não poderá reverter isso!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Sim, delete!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.deviceService.deleteDevice(device.id).subscribe({\n          next: () => {\n            this.getDevices();\n            Swal.fire('Deletado!', 'O dispositivo foi deletado.', 'success');\n          },\n          error: (error) => {\n            Swal.fire('Erro!', 'Não foi possível deletar o dispositivo.', 'error');\n          }\n        });\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
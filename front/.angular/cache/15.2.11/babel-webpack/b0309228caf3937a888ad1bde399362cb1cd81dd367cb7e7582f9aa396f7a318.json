{"ast":null,"code":"import Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/device/device.service\";\nimport * as i2 from \"@angular/common\";\nfunction DeviceListComponent_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function DeviceListComponent_tr_20_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const device_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.editDevice(device_r3));\n    });\n    i0.ɵɵelement(9, \"i\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function DeviceListComponent_tr_20_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const device_r3 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.deleteDevice(device_r3));\n    });\n    i0.ɵɵelement(11, \"i\", 11);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const device_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(device_r3.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(device_r3.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(device_r3.manufacturer);\n  }\n}\nfunction DeviceListComponent_ng_template_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1, \"Nenhum dispositivo encontrado. Adicione um novo device acima!\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class DeviceListComponent {\n  constructor(deviceService) {\n    this.deviceService = deviceService;\n    this.devices = [];\n  }\n  ngOnInit() {\n    this.getDevices();\n  }\n  getDevices() {\n    this.deviceService.getDevices().subscribe({\n      next: devices => {\n        this.devices = devices;\n      },\n      error: error => {\n        console.error('Erro ao obter dispositivos', error);\n      }\n    });\n  }\n  editDevice(device) {\n    // Aqui, você preencheria o formulário de registro com os dados do dispositivo para edição\n    // Isso pode envolver a navegação para o componente de registro com os dados do dispositivo\n    console.log('Editando dispositivo', device);\n    // Lógica para preencher o formulário de edição\n  }\n\n  deleteDevice(device) {\n    Swal.fire({\n      title: 'Tem certeza?',\n      text: \"Você não poderá reverter isso!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Sim, delete!'\n    }).then(result => {\n      if (result.isConfirmed) {\n        this.deviceService.deleteDevice(device.id).subscribe({\n          next: () => {\n            this.getDevices();\n            Swal.fire('Deletado!', 'O dispositivo foi deletado.', 'success');\n          },\n          error: error => {\n            Swal.fire('Erro!', 'Não foi possível deletar o dispositivo.', 'error');\n          }\n        });\n      }\n    });\n  }\n  static #_ = this.ɵfac = function DeviceListComponent_Factory(t) {\n    return new (t || DeviceListComponent)(i0.ɵɵdirectiveInject(i1.DeviceService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DeviceListComponent,\n    selectors: [[\"app-device-list\"]],\n    decls: 23,\n    vars: 1,\n    consts: [[1, \"mt-5\", \"container-fluid\"], [1, \"row\"], [1, \"col\"], [1, \"text-center\", \"mb-3\"], [1, \"table\", \"table-hover\", \"shadow-sm\"], [1, \"bg-primary\", \"text-white\"], [4, \"ngFor\", \"ngForOf\"], [\"noDevices\", \"\"], [1, \"btn\", \"btn-outline-info\", \"btn-sm\", 3, \"click\"], [1, \"fas\", \"fa-edit\"], [1, \"btn\", \"btn-outline-danger\", \"btn-sm\", 3, \"click\"], [1, \"fas\", \"fa-trash-alt\"], [1, \"alert\", \"alert-info\", \"text-center\"]],\n    template: function DeviceListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h3\", 3);\n        i0.ɵɵtext(4, \"Devices\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"hr\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 1)(7, \"div\", 2)(8, \"table\", 4)(9, \"thead\", 5)(10, \"tr\")(11, \"th\");\n        i0.ɵɵtext(12, \"Nome\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"th\");\n        i0.ɵɵtext(14, \"Descri\\u00E7\\u00E3o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"th\");\n        i0.ɵɵtext(16, \"Fabricante\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"th\");\n        i0.ɵɵtext(18, \"A\\u00E7\\u00F5es\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(19, \"tbody\");\n        i0.ɵɵtemplate(20, DeviceListComponent_tr_20_Template, 12, 3, \"tr\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(21, DeviceListComponent_ng_template_21_Template, 2, 0, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(20);\n        i0.ɵɵproperty(\"ngForOf\", ctx.devices);\n      }\n    },\n    dependencies: [i2.NgForOf],\n    styles: [\".table-hover[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover {\\n  background-color: #f8f9fa;\\n}\\n.table-striped[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-of-type(odd) {\\n  background-color: rgba(0, 0, 0, 0.05);\\n}\\n.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\\n  font-weight: bold;\\n  text-align: left;\\n  border-bottom: 2px solid #6c757d;\\n}\\n.table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\n  vertical-align: middle;\\n}\\n.table[_ngcontent-%COMP%]   .btn-outline-primary[_ngcontent-%COMP%] {\\n  margin-right: 5px;\\n}\\n.table[_ngcontent-%COMP%]   .btn-outline-primary[_ngcontent-%COMP%]:hover {\\n  color: #fff;\\n  background-color: #007bff;\\n  border-color: #007bff;\\n}\\n.table[_ngcontent-%COMP%]   .btn-outline-danger[_ngcontent-%COMP%] {\\n  margin-left: 5px;\\n}\\n.table[_ngcontent-%COMP%]   .btn-outline-danger[_ngcontent-%COMP%]:hover {\\n  color: #fff;\\n  background-color: #dc3545;\\n  border-color: #dc3545;\\n}\\n.table[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]   i[_ngcontent-%COMP%] {\\n  margin: 0;\\n}\\n\\n.alert-info[_ngcontent-%COMP%] {\\n  background-color: #d1ecf1;\\n  border-color: #bee5eb;\\n  color: #0c5460;\\n}\\n\\n@media (max-width: 576px) {\\n  .btn[_ngcontent-%COMP%] {\\n    padding: 0.25rem 0.5rem;\\n    font-size: 0.875rem;\\n    line-height: 1.5;\\n    border-radius: 0.2rem;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9kZXZpY2VzL2RldmljZS1saXN0L2RldmljZS1saXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVVNO0VBQ0UseUJBQUE7QUFUUjtBQWVJO0VBQ0UscUNBQUE7QUFiTjtBQWlCRTtFQUNFLGlCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxnQ0FBQTtBQWZKO0FBa0JFO0VBQ0Usc0JBQUE7QUFoQko7QUFvQkk7RUFDRSxpQkFBQTtBQWxCTjtBQW1CTTtFQUNFLFdBQUE7RUFDQSx5QkFwQ1E7RUFxQ1IscUJBckNRO0FBb0JoQjtBQXFCSTtFQUNFLGdCQUFBO0FBbkJOO0FBb0JNO0VBQ0UsV0FBQTtFQUNBLHlCQTFDTztFQTJDUCxxQkEzQ087QUF5QmY7QUFzQkk7RUFDRSxTQUFBO0FBcEJOOztBQTBCRTtFQUNFLHlCQUFBO0VBQ0EscUJBQUE7RUFDQSxjQUFBO0FBdkJKOztBQTRCQTtFQUNFO0lBQ0UsdUJBQUE7SUFDQSxtQkFBQTtJQUNBLGdCQUFBO0lBQ0EscUJBQUE7RUF6QkY7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIlxuJHByaW1hcnktY29sb3I6ICMwMDdiZmY7XG4kc2Vjb25kYXJ5LWNvbG9yOiAjNmM3NTdkO1xuJHN1Y2Nlc3MtY29sb3I6ICMyOGE3NDU7XG4kZGFuZ2VyLWNvbG9yOiAjZGMzNTQ1O1xuJGluZm8tY29sb3I6ICMxN2EyYjg7XG5cbi50YWJsZSB7XG4gICYtaG92ZXIge1xuICAgIHRib2R5IHtcbiAgICAgIHRyOmhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZjlmYTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAmLXN0cmlwZWQge1xuICAgIHRib2R5IHRyOm50aC1vZi10eXBlKG9kZCkge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAuMDUpO1xuICAgIH1cbiAgfVxuXG4gIHRoIHtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAkc2Vjb25kYXJ5LWNvbG9yO1xuICB9XG5cbiAgdGQge1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIH1cbiAgXG4gIC5idG4ge1xuICAgICYtb3V0bGluZS1wcmltYXJ5IHtcbiAgICAgIG1hcmdpbi1yaWdodDogNXB4O1xuICAgICAgJjpob3ZlciB7XG4gICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkcHJpbWFyeS1jb2xvcjtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiAkcHJpbWFyeS1jb2xvcjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmLW91dGxpbmUtZGFuZ2VyIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiA1cHg7XG4gICAgICAmOmhvdmVyIHtcbiAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRkYW5nZXItY29sb3I7XG4gICAgICAgIGJvcmRlci1jb2xvcjogJGRhbmdlci1jb2xvcjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpIHtcbiAgICAgIG1hcmdpbjogMDtcbiAgICB9XG4gIH1cbn1cblxuLmFsZXJ0IHtcbiAgJi1pbmZvIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDFlY2YxO1xuICAgIGJvcmRlci1jb2xvcjogI2JlZTVlYjtcbiAgICBjb2xvcjogIzBjNTQ2MDtcbiAgfVxufVxuXG4vLyBBZGFwdGHDg8Knw4PCtWVzIHJlc3BvbnNpdmFzIHNlIG5lY2Vzc8ODwqFyaW9cbkBtZWRpYSAobWF4LXdpZHRoOiA1NzZweCkge1xuICAuYnRuIHtcbiAgICBwYWRkaW5nOiAuMjVyZW0gLjVyZW07XG4gICAgZm9udC1zaXplOiAuODc1cmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjU7XG4gICAgYm9yZGVyLXJhZGl1czogLjJyZW07XG4gIH1cbn1cblxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AAGA,OAAOA,IAAI,MAAM,aAAa;;;;;;;ICiBpBC,0BAAmC;IAC7BA,YAAiB;IAAAA,iBAAK;IAC1BA,0BAAI;IAAAA,YAAwB;IAAAA,iBAAK;IACjCA,0BAAI;IAAAA,YAAyB;IAAAA,iBAAK;IAClCA,0BAAI;IAC0CA;MAAA;MAAA;MAAA;MAAA,OAASA,2CAAkB;IAAA,EAAC;IACtEA,uBAA2B;IAC7BA,iBAAS;IACTA,mCAA6E;IAA/BA;MAAA;MAAA;MAAA;MAAA,OAASA,6CAAoB;IAAA,EAAC;IAC1EA,yBAAgC;IAClCA,iBAAS;;;;IATPA,eAAiB;IAAjBA,oCAAiB;IACjBA,eAAwB;IAAxBA,2CAAwB;IACxBA,eAAyB;IAAzBA,4CAAyB;;;;;IAajCA,+BAA0C;IAAAA,6EAA6D;IAAAA,iBAAM;;;AD1BrH,OAAM,MAAOC,mBAAmB;EAG9BC,YAAoBC,aAA4B;IAA5B,kBAAa,GAAbA,aAAa;IAFjC,YAAO,GAAa,EAAE;EAE8B;EAEpDC,QAAQ;IACN,IAAI,CAACC,UAAU,EAAE;EACnB;EAEAA,UAAU;IACR,IAAI,CAACF,aAAa,CAACE,UAAU,EAAE,CAACC,SAAS,CAAC;MACxCC,IAAI,EAAGC,OAAO,IAAI;QAChB,IAAI,CAACA,OAAO,GAAGA,OAAO;MACxB,CAAC;MACDC,KAAK,EAAGA,KAAK,IAAI;QACfC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;KACD,CAAC;EACJ;EAEAE,UAAU,CAACC,MAAc;IACvB;IACA;IACAF,OAAO,CAACG,GAAG,CAAC,sBAAsB,EAAED,MAAM,CAAC;IAC3C;EACF;;EAEAE,YAAY,CAACF,MAAc;IACzBb,IAAI,CAACgB,IAAI,CAAC;MACRC,KAAK,EAAE,cAAc;MACrBC,IAAI,EAAE,gCAAgC;MACtCC,IAAI,EAAE,SAAS;MACfC,gBAAgB,EAAE,IAAI;MACtBC,kBAAkB,EAAE,SAAS;MAC7BC,iBAAiB,EAAE,MAAM;MACzBC,iBAAiB,EAAE;KACpB,CAAC,CAACC,IAAI,CAAEC,MAAM,IAAI;MACjB,IAAIA,MAAM,CAACC,WAAW,EAAE;QACtB,IAAI,CAACtB,aAAa,CAACW,YAAY,CAACF,MAAM,CAACc,EAAE,CAAC,CAACpB,SAAS,CAAC;UACnDC,IAAI,EAAE,MAAK;YACT,IAAI,CAACF,UAAU,EAAE;YACjBN,IAAI,CAACgB,IAAI,CAAC,WAAW,EAAE,6BAA6B,EAAE,SAAS,CAAC;UAClE,CAAC;UACDN,KAAK,EAAGA,KAAK,IAAI;YACfV,IAAI,CAACgB,IAAI,CAAC,OAAO,EAAE,yCAAyC,EAAE,OAAO,CAAC;UACxE;SACD,CAAC;;IAEN,CAAC,CAAC;EACJ;EAAC;qBAjDUd,mBAAmB;EAAA;EAAA;UAAnBA,mBAAmB;IAAA0B;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCVhC/B,8BAAkC;QAGCA,uBAAO;QAAAA,iBAAK;QACzCA,qBAAI;QACNA,iBAAM;QAGRA,8BAAiB;QAKHA,qBAAI;QAAAA,iBAAK;QACbA,2BAAI;QAAAA,oCAAS;QAAAA,iBAAK;QAClBA,2BAAI;QAAAA,2BAAU;QAAAA,iBAAK;QACnBA,2BAAI;QAAAA,gCAAK;QAAAA,iBAAK;QAGlBA,8BAAO;QACLA,qEAYK;QACPA,iBAAQ;QAEVA,uHAEc;QAChBA,iBAAM;;;QAlBuBA,gBAAU;QAAVA,qCAAU","names":["Swal","i0","DeviceListComponent","constructor","deviceService","ngOnInit","getDevices","subscribe","next","devices","error","console","editDevice","device","log","deleteDevice","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","id","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/cabukater/Projects/teste-front/front/src/app/components/devices/device-list/device-list.component.ts","/Users/cabukater/Projects/teste-front/front/src/app/components/devices/device-list/device-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Device } from 'src/app/models/device.model';\nimport { DeviceService } from 'src/app/services/device/device.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-device-list',\n  templateUrl: './device-list.component.html',\n  styleUrls: ['./device-list.component.scss']\n})\nexport class DeviceListComponent implements OnInit {\n  devices: Device[] = [];\n\n  constructor(private deviceService: DeviceService) { }\n\n  ngOnInit(): void {\n    this.getDevices();\n  }\n\n  getDevices(): void {\n    this.deviceService.getDevices().subscribe({\n      next: (devices) => {\n        this.devices = devices;\n      },\n      error: (error) => {\n        console.error('Erro ao obter dispositivos', error);\n      }\n    });\n  }\n\n  editDevice(device: Device): void {\n    // Aqui, você preencheria o formulário de registro com os dados do dispositivo para edição\n    // Isso pode envolver a navegação para o componente de registro com os dados do dispositivo\n    console.log('Editando dispositivo', device);\n    // Lógica para preencher o formulário de edição\n  }\n\n  deleteDevice(device: Device): void {\n    Swal.fire({\n      title: 'Tem certeza?',\n      text: \"Você não poderá reverter isso!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Sim, delete!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.deviceService.deleteDevice(device.id).subscribe({\n          next: () => {\n            this.getDevices();\n            Swal.fire('Deletado!', 'O dispositivo foi deletado.', 'success');\n          },\n          error: (error) => {\n            Swal.fire('Erro!', 'Não foi possível deletar o dispositivo.', 'error');\n          }\n        });\n      }\n    });\n  }\n}\n","<div class=\"mt-5 container-fluid\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <h3 class=\"text-center mb-3\">Devices</h3>\n      <hr>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col\">\n      <table class=\"table table-hover shadow-sm\">\n        <thead class=\"bg-primary text-white\">\n          <tr>\n            <th>Nome</th>\n            <th>Descrição</th>\n            <th>Fabricante</th>\n            <th>Ações</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let device of devices\">\n            <td>{{ device.name }}</td>\n            <td>{{ device.description }}</td>\n            <td>{{ device.manufacturer }}</td>\n            <td>\n              <button class=\"btn btn-outline-info btn-sm\" (click)=\"editDevice(device)\">\n                <i class=\"fas fa-edit\"></i>\n              </button>\n              <button class=\"btn btn-outline-danger btn-sm\" (click)=\"deleteDevice(device)\">\n                <i class=\"fas fa-trash-alt\"></i>\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <ng-template #noDevices>\n        <div class=\"alert alert-info text-center\">Nenhum dispositivo encontrado. Adicione um novo device acima!</div>\n      </ng-template>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}